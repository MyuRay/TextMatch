rules_version = '2';

  service cloud.firestore {
    match /databases/{database}/documents {

      // 教科書データ：誰でも読める、ログインユーザーのみ書き込み可能
      match /textbooks/{bookId} {
        allow read: if true;
        allow write: if request.auth != null;
        // 出品者と購入者は自分の教科書を更新可能
        allow update: if request.auth != null && 
          (request.auth.uid == resource.data.userId || 
           request.auth.uid == resource.data.buyerId);
      }

      // ユーザープロフィール：ログインユーザーなら読める、本人のみ書き込み可能
      match /users/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      // 会話：参加者のみアクセス可能
      match /conversations/{conversationId} {
        allow read: if request.auth != null &&
          (request.auth.uid == resource.data.buyerId ||
           request.auth.uid == resource.data.sellerId);
        allow create: if request.auth != null &&
          (request.auth.uid == request.resource.data.buyerId ||
           request.auth.uid == request.resource.data.sellerId);
        allow update: if request.auth != null &&
          (request.auth.uid == resource.data.buyerId ||
           request.auth.uid == resource.data.sellerId);
      }

      // メッセージ：会話の参加者のみアクセス可能
      match /conversations/{conversationId}/messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null &&
          request.auth.uid == request.resource.data.senderId;
        allow update, delete: if request.auth != null &&
          request.auth.uid == resource.data.senderId;
      }

      // お気に入り：ログインユーザーが自分のお気に入りのみ操作可能
      match /favorites/{favoriteId} {
        allow read: if request.auth != null &&
          request.auth.uid == resource.data.userId;
        allow create: if request.auth != null &&
          request.auth.uid == request.resource.data.userId;
        allow delete: if request.auth != null &&
          request.auth.uid == resource.data.userId;
        allow update: if request.auth != null &&
          request.auth.uid == resource.data.userId;
      }
    }
  }